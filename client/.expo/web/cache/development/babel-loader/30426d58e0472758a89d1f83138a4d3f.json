{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jakub\\\\Desktop\\\\Projects\\\\image-analyzer\\\\client\\\\App.tsx\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Camera as CameraBase } from \"expo-camera\";\nimport { useMachine } from \"@xstate/react\";\nimport { machine } from \"./machine\";\nexport default function App() {\n  var _useMachine = useMachine(machine),\n      _useMachine2 = _slicedToArray(_useMachine, 2),\n      current = _useMachine2[0],\n      send = _useMachine2[1];\n\n  console.log(current.value);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, (current.matches(\"ready\") || current.matches(\"init\")) && React.createElement(MainScreen, {\n    send: send,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }), current.matches(\"camera\") && React.createElement(Camera, {\n    send: send,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 39\n    }\n  }), current.matches(\"processing\") && React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 43\n    }\n  })));\n}\n\nfunction MainScreen(_ref) {\n  var send = _ref.send;\n  return React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: styles.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Image Analyzer\"), React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: \"https://cdn1.iconfinder.com/data/icons/hawcons/32/698903-icon-22-eye-512.png\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Open camera\",\n    onPress: function onPress() {\n      send({\n        type: \"OPEN_CAMERA\"\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Open camera\"));\n}\n\nfunction Camera(_ref2) {\n  var send = _ref2.send;\n  var camera = React.useRef(null);\n\n  var takeSnap = function takeSnap() {\n    var cb = function cb() {\n      var snap;\n      return _regeneratorRuntime.async(function cb$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!camera.current) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(camera.current.takePictureAsync({\n                quality: 0.5,\n                base64: true,\n                fastMode: true\n              }));\n\n            case 3:\n              snap = _context.sent;\n              send({\n                type: \"SAVE_SNAP\",\n                data: snap\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    cb();\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: styles.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"What do you want to analyze?\"), React.createElement(CameraBase, {\n    ref: camera,\n    style: {\n      flex: 1\n    },\n    type: CameraBase.Constants.Type.back,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Take photo\",\n    onPress: takeSnap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Take photo\")));\n}\n\nfunction Loader() {\n  return React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: styles.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"Your image is beeing analyzed\"), React.createElement(Text, {\n    style: styles.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, \"Please wait\"));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  wrapper: {\n    height: 650,\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  heading: {\n    fontSize: 30,\n    textAlign: \"center\"\n  },\n  image: {\n    height: 200,\n    width: 200\n  }\n});","map":{"version":3,"sources":["C:/Users/jakub/Desktop/Projects/image-analyzer/client/App.tsx"],"names":["React","Camera","CameraBase","useMachine","machine","App","current","send","console","log","value","styles","container","wrapper","matches","MainScreen","heading","image","uri","type","camera","useRef","takeSnap","cb","takePictureAsync","quality","base64","fastMode","snap","data","flex","Constants","Type","back","marginTop","Loader","StyleSheet","create","backgroundColor","alignItems","justifyContent","height","display","fontSize","textAlign","width"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, Text, View, Button, Image } from \"react-native\";\r\nimport { Camera as CameraBase } from \"expo-camera\";\r\nimport { useMachine } from \"@xstate/react\";\r\nimport { machine, Send } from \"./machine\";\r\n\r\ntype Props = { send: Send };\r\n\r\nexport default function App() {\r\n  const [current, send] = useMachine(machine);\r\n\r\n  console.log(current.value);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.wrapper}>\r\n        {(current.matches(\"ready\") || current.matches(\"init\")) && (\r\n          <MainScreen send={send} />\r\n        )}\r\n        {current.matches(\"camera\") && <Camera send={send} />}\r\n        {current.matches(\"processing\") && <Loader />}\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction MainScreen({ send }: Props) {\r\n  return (\r\n    <>\r\n      <Text style={styles.heading}>Image Analyzer</Text>\r\n\r\n      <Image\r\n        style={styles.image}\r\n        source={{\r\n          uri:\r\n            \"https://cdn1.iconfinder.com/data/icons/hawcons/32/698903-icon-22-eye-512.png\",\r\n        }}\r\n      />\r\n\r\n      <Button\r\n        title=\"Open camera\"\r\n        onPress={() => {\r\n          send({ type: \"OPEN_CAMERA\" });\r\n        }}\r\n      >\r\n        Open camera\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Camera({ send }: Props) {\r\n  const camera = React.useRef<CameraBase>(null);\r\n\r\n  const takeSnap = () => {\r\n    const cb = async () => {\r\n      if (camera.current) {\r\n        const snap = await camera.current.takePictureAsync({\r\n          quality: 0.5,\r\n          base64: true,\r\n          fastMode: true,\r\n        });\r\n        send({ type: \"SAVE_SNAP\", data: snap });\r\n      }\r\n    };\r\n    cb();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Text style={styles.heading}>What do you want to analyze?</Text>\r\n\r\n      <CameraBase\r\n        ref={camera}\r\n        style={{ flex: 1 }}\r\n        type={CameraBase.Constants.Type.back}\r\n      />\r\n\r\n      <View style={{ marginTop: 10 }}>\r\n        <Button title=\"Take photo\" onPress={takeSnap}>\r\n          Take photo\r\n        </Button>\r\n      </View>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Loader() {\r\n  return (\r\n    <>\r\n      <Text style={styles.heading}>Your image is beeing analyzed</Text>\r\n      <Text style={styles.heading}>Please wait</Text>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  wrapper: {\r\n    height: 650,\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  heading: {\r\n    fontSize: 30,\r\n    textAlign: \"center\",\r\n  },\r\n  image: {\r\n    height: 200,\r\n    width: 200,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}